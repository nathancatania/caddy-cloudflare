name: Build and Push Caddy Image

on:
  schedule:
    - cron: '0 0 * * *'  # Check daily at midnight UTC
  push:
    branches: [ main ]
    paths:
      - 'caddy/Dockerfile'
  workflow_dispatch:  # Allow manual triggers

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    outputs:
      needs_build: ${{ steps.check.outputs.needs_build }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Get latest Caddy version
        id: version
        run: |
          LATEST=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          echo "version=${LATEST}" >> $GITHUB_OUTPUT
          
      - name: Check if rebuild needed
        id: check
        run: |
          DIGEST=$(curl -s "https://hub.docker.com/v2/repositories/library/caddy/tags/latest" | jq -r '.digest')
          LOCAL_DIGEST=$(curl -s "https://hub.docker.com/v2/repositories/${{ github.repository_owner }}/caddy-cloudflare/tags/latest" | jq -r '.digest' || echo '')
          if [ "$DIGEST" != "$LOCAL_DIGEST" ] || [ -z "$LOCAL_DIGEST" ]; then
            echo "needs_build=true" >> $GITHUB_OUTPUT
          else
            echo "needs_build=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: check-upstream
    if: needs.check-upstream.outputs.needs_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/caddy-cloudflare:latest
            ghcr.io/${{ github.repository_owner }}/caddy-cloudflare:${{ needs.check-upstream.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
